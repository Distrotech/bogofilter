#### Sample bogofilter configuration file
#
#	bogofilter config files should be located in:
#	    /etc as /etc/bogofilter.cf ; and/or
#	    $HOME as .bogofilter.cf

# Note: comment lines describe the configuration parameters
#	and show other possible values for the parameter
#
#	non-comment lines show default values 
#	as used in the bogofilter source code.


#### ALGORITHM
#
#	specify spamicity algorithm

#algorithm=graham
algorithm=robinson
#algorithm=fisher


#### SPAM_HEADER_NAME
#
#	used in reporting spamicity and
#	in removing already existing headers

spam_header_name=X-Bogosity


#### MINIMUM DEVIATION
#
#	if token spamicity closer to EVEN_ODDS (0.5f)
#	than MIN_DEV, don't use the word in the 
#	spamicity calculation

min_dev=0.0

# min_dev=0.2

##### Robinson Constants
#
#	Specify floating point values for
#	Robinson S and X coefficients

robs=0.001
robx=0.415


##### STATS_IN_HEADER
#
#	non-zero (default):  put spamicity info in message header
#	zero:  put spamicity info in message body
#	can use "bool" values of True, False, Yes, No, 1, or 0

stats_in_header=Y

#stats_in_header=N


#### CUTOFF Values
#
#	for Graham and Robinson:
#	    only spam_cutoff is needed.
#
#	for Fisher:
#	    both ham_cutoff and spam_cutoff are allowed.
#	    setting ham_cutoff to a non-zero value will
#	    enable tristate results (Yes/No/Unsure).
#
# graham:
#
# spam_cutoff = 0.90

# robinson:
#
# spam_cutoff = 0.54

# fisher (with Yes/No output):
#
# ham_cutoff = 0.00
# spam_cutoff = 0.95

# fisher (with Yes/No/Unsure output):
#
# ham_cutoff = 0.10
# spam_cutoff = 0.95


##### THRESHOLD values
#
#	used to determine if/when spamicity 
#	values are output by print_bogostats()

thresh_index = 0
thresh_stats = 0.0f
thresh_rtable = 0.0f

# thresh_index = 12
# thresh_stats =0.2f
# thresh_rtable=0.4f


#### USER_CONFIG_FILE
#
#	name/location of user config file

user_config_file=~/.bogofilter.cf

#user_config_file=~/.bogofilterrc
#user_config_file=~/.bogofilter/config


#### WORDLIST: define a word list
#
#	char type: 's','g','i' (denoting spam, good, or ignore)
#	char *name: name of list, e.g. "good", "spam", "ignore"
#	char *path: path to file
#	double weight - probability BIAS for list
#	int override - skip lower valued lists

#wordlist i,ignore,.ignorelist.db,1,0,0
