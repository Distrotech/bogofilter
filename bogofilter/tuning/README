During computation the Robinson-Fisher algorithm uses several special
numeric constants (robs, robx, min_dev, spam_cutoff, and ham_cutoff).
File bogofilter/doc/bogofilter-tuning.HOWTO describes these parameters
and explains how to tune the Robinson-Fisher algorithm so it gives
optimal results.

This directory contains the scripts for running tests as described in
the HOWTO.  The scripts will suggest the optimal robs, min_dev, and
spam_cutoff values for _your_ email.  The scripts were created to
generate a file (named parms.tbl) giving test parameters and counts of
false negatives.  The file then becomes input to the R mathematical
language (see file smindev.R).  

Script bogolex.sh converts an email to a "msg-count" format which
contains the information needed by bogofilter to score the email.
A "msg-count" file contains tokens and their good and bad counts (from
the wordlists).  With formail, bogolex.sh can take a whole mbox file
and produce a msg-count file with an entry for each email in the mbox
file.  Using msg-count files during tuning moves the overhead of
looking up counts to a pre-processing pass at the beginning of a tuning
run.  Since bogofilter doesn't have to use BerkeleyDB during scoring,
it can process msg-count files approx 10 to 20 times faster than
regular files.

The scripts are functional, but not very user friendly.  If you're
interested, the starting point is script smindev.sh.  Take a look at
it.  Set appropriate file names.  Run it. 

Enjoy!
