#! /bin/sh

set -e

# Note:  When run via "make check", test output files are automatically deleted.
#	 When run from the command line, outputs files are left in directory
#	 systest.YYYYMMDD.  This is useful when something is different.
#
#	 ./inputs  - test inputs
#	 ./outputs - known correct outputs
#
#	 systest.YYYYMMDD:
#		tests   - directory containing individual output files

: ${srcdir=.}
relpath="`pwd`/../.."
NODB=1 . ${srcdir}/../t.frame

verbose=0
if [ "$1" = "-v" ]; then
    verbose=1
fi

[ -d ${TMPDIR}/tests ] && rm -rf ${TMPDIR}/tests
mkdir -p ${TMPDIR}/tests

CONFIG="${TMPDIR}/test.cf"
BOGOFILTER="$VAL ${relpath}/bogofilter -c ${CONFIG} -y 0"
BOGOUTIL="$VAL ${relpath}/bogoutil"
SYSTEST="${srcdir}"

cat <<EOF > ${CONFIG}
robx=0.415
min_dev=0.0
ham_cutoff=0.10
spam_cutoff=0.95
spam_header_name=X-Bogosity
stats_in_header=Y
header_line_markup=no
EOF

map_rc()
{
    (
	set +e
	eval "$@"
	a=$?
	[ $a -eq 0 ] && exit 0
	[ $a -eq 1 ] && exit 0
	exit $a
    )
}

# Expected spamicity values (11/17/02 13:13):
#
#	1 g v		X-Bogosity: No,  spamicity=0.000000
#	1 r v		X-Bogosity: No,  spamicity=0.402296
#	2a g vv		X-Bogosity: Yes, spamicity=1.000000
#	2a r vv		X-Bogosity: No,  spamicity=0.527095
#	2b g vv		X-Bogosity: Yes, spamicity=1.000000
#	2b g vvv	X-Bogosity: Yes, spamicity=1.000000
#	2b r vv		X-Bogosity: Yes, spamicity=0.540124
#	2b r vvv	X-Bogosity: Yes, spamicity=0.540124
#	3 g vvv		X-Bogosity: Yes, spamicity=1.000000
#	3 r vvv		X-Bogosity: Yes, spamicity=0.540316

for alg in f r g ; do
    BOGOFILTER_DIR="${TMPDIR}/words.$alg"
    export BOGOFILTER_DIR
    rm -rf $BOGOFILTER_DIR
    mkdir $BOGOFILTER_DIR
    $BOGOFILTER -$alg -s < ${SYSTEST}/inputs/spam.mbx
    $BOGOFILTER -$alg -n < ${SYSTEST}/inputs/good.mbx
    for f in $BOGOFILTER_DIR/*.${DB_EXT} ; do
	n=`basename $f .${DB_EXT}`
	$BOGOUTIL -d $BOGOFILTER_DIR/$n.${DB_EXT} > $BOGOFILTER_DIR/$n.txt
    done
    if  [ $verbose -ne 0 ]; then
	ls -l $BOGOFILTER_DIR/*list.txt
    fi
    #
    # run tests for msg.1.txt, msg.2.txt, and msg.3.txt
    #
    for tst in 1.1.v 2.2a.vv 2.2a.vvv 3.3.vvv ; do
	in=`echo $tst | tr "." " " | awk '{print $1}'`
	out=`echo $tst | tr "." " " | awk '{print $2}'`
	ver=`echo $tst | tr "." " " | awk '{print $3}'`
	map_rc $BOGOFILTER -$alg -$ver 2>/dev/null \
	< ${SYSTEST}/inputs/msg.$in.txt > ${TMPDIR}/tests-$alg || :
	sed s/,.version=.*// < ${TMPDIR}/tests-$alg > ${TMPDIR}/tests/msg.$out.$alg.$ver
    done
    #
    # classify msg.2.txt a second time and rerun tests
    #    (expect different results from first run)
    #
    $BOGOFILTER -$alg -s < ${SYSTEST}/inputs/msg.3.txt
    for tst in 2.2b.vv 2.2b.vvv ; do
	in=`echo $tst | tr "." " " | awk '{print $1}'`
	out=`echo $tst | tr "." " " | awk '{print $2}'`
	ver=`echo $tst | tr "." " " | awk '{print $3}'`
	map_rc $BOGOFILTER -$alg -$ver 2>/dev/null \
	< ${SYSTEST}/inputs/msg.$in.txt > ${TMPDIR}/tests-$alg
	sed s/,.version=.*// < ${TMPDIR}/tests-$alg > ${TMPDIR}/tests/msg.$out.$alg.$ver
    done
    if  [ $verbose -eq 0 ]; then
	rm -f ${TMPDIR}/tests-$alg
	rm -f $BOGOFILTER_DIR/*.${DB_EXT}
    fi
done

rm -f ${CONFIG}

[ ! -z "$BF_SAVEDIR" ] && . ${srcdir}/../t.save

OUTPUTS=${SYSTEST}/outputs

for i in $OUTPUTS/*v ; do
    j=`basename $i`
    if  [ $verbose -eq 0 ]; then
	cmp $i ${TMPDIR}/tests/$j
    else
	diff $DIFF_BRIEF ${OUTPUTS}/$OUT ${TMPDIR}/tests/$OUT
    fi
done
