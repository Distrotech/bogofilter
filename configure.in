# $Id$
AC_INIT(bogofilter, 0.9.1.2.cvs)
AC_PREREQ(2.55)
AC_CONFIG_SRCDIR([bogofilter.c])
AM_INIT_AUTOMAKE
AM_CONFIG_HEADER(config.h:config.in)
AC_PROG_CC
AC_PROG_RANLIB
AM_PROG_LEX

# Check for extension
AC_EXEEXT

dnl If we're using gcc, enable some warnings
dnl missing: -Wunreachable-code
AC_CACHE_CHECK(for additional compiler options, ac_cv_prog_gcc_flags, [
ac_cv_prog_gcc_flags=""
if test "$GCC" = yes
then
  echo "void dummy(void);" >configure-dummy.c
  echo "void dummy(void) {}" >>configure-dummy.c
  for i in -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wshadow \
      -Wbad-function-cast -Wcast-qual -Wcast-align -Wwrite-strings \
      -Waggregate-return -Wmissing-declarations \
      -Wmissing-format-attribute -Wnested-externs \
      -ggdb -fno-common -Wchar-subscripts -Wcomment \
      -Wformat=2 -Wimplicit -Wsequence-point -Wreturn-type \
      -Wfloat-equal -Wpointer-arith \
      -Wmissing-format-attribute -Wno-system-headers
      # -Wmissing-noreturn -Wconversion -pedantic -Wredundant-decls
  do
       if $CC $i $ac_cv_prog_gcc_flags -c configure-dummy.c >/dev/null 2>&1 
       then ac_cv_prog_gcc_flags="$ac_cv_prog_gcc_flags $i"
       else echo "ignoring $i"
       fi
  done
fi])
rm -f configure-dummy.c configure-dummy.o
CFLAGS="$CFLAGS $ac_cv_prog_gcc_flags"
AC_SUBST(CFLAGS)

# Checks for libraries.
AC_CHECK_LIB([m],  [cos])

AH_TEMPLATE([HAVE_DB_H], [Have suitable db.h header])

WITH_DB=

AC_ARG_WITH(db,
        [  --with-db=PATH     Specify path to BerkelyDB install directory ],
        [
                if test "x$withval" != "xno" ; then
		        WITH_DB=$withval
                        if test -d "$withval/lib"; then
                                if test -n "${need_dash_r}"; then
                                        LDFLAGS="-R${withval}/lib ${LDFLAGS}"
                                fi
				LDFLAGS="-L${withval}/lib ${LDFLAGS}"
                        else
                                if test -n "${need_dash_r}"; then
                                        LDFLAGS="-R${withval} ${LDFLAGS}"
                                fi
				LDFLAGS="-L${withval} ${LDFLAGS}"
                        fi
                        if test -d "$withval/include"; then
                                CPPFLAGS="-I${withval}/include ${CPPFLAGS}"
                        else
                                CPPFLAGS="-I${withval} ${CPPFLAGS}"
                        fi
                fi
    ]
)
if test "x$WITH_DB" != "x" ; then
    DISTCHECK_CONFIGURE_FLAGS="$DISTCHECK_CONFIGURE_FLAGS --with-db=$WITH_DB"
fi

AC_EGREP_HEADER(db_create, [db.h], AC_DEFINE(HAVE_DB_H),
		AC_MSG_ERROR([Can not locate a suitable BerkeleyDB db.h header file.
Use --with-db=PATH to specify the path to a v3+ install directory.
You can download BerkeleyDB 4.0.x from http://www.sleepycat.com])
)

AC_CHECK_LIB(db-4, db_create, LIBS="$LIBS -ldb-4", 
AC_CHECK_LIB(db4, db_create, LIBS="$LIBS -ldb4", 
		AC_CHECK_LIB(db-3, db_create, LIBS="$LIBS -ldb-3", 
		AC_CHECK_LIB(db3, db_create, LIBS="$LIBS -ldb3", 
			AC_CHECK_LIB(db-2, db_create, LIBS="$LIBS -ldb-2",
			AC_CHECK_LIB(db2, db_create, LIBS="$LIBS -ldb2",
				AC_CHECK_LIB(db, db_create, LIBS="$LIBS -ldb", 
					AC_MSG_ERROR([Can not locate a suitable BerkeleyDB libdb.so library.
Use --with-db=PATH to specify the path to a v3+ install directory])
					)))))))


AC_MSG_CHECKING(BerkeleyDB)
AC_TRY_LINK_FUNC(db_create,, AC_MSG_ERROR([BerkeleyDB v3+ package is not working properly. Specify a different one using --with-db=PATH]))
AC_MSG_RESULT(BerkeleyDB)

# Allow the user to specify a header name to use to indicate whether a given
# message is SPAM or not.
AC_ARG_ENABLE(spam-header-name, 
	AC_HELP_STRING([--enable-spam-header-name=name], 
	[Use specified header name instead of X-Bogosity]), 
	AC_DEFINE_UNQUOTED(SPAM_HEADER_NAME, 
	["$enableval"], 
	[Use specified header name instead of X-Bogosity]),
	AC_DEFINE_UNQUOTED(SPAM_HEADER_NAME, 
	["X-Bogosity"], 
	[Use specified header name instead of X-Bogosity])
)

# Allow the user to disable Graham methods

AC_ARG_ENABLE(graham-method,
	AC_HELP_STRING([--disable-graham-method],
	[Disable Graham calculation method]),
	if test "$enableval" = no; then
		[USE_GRAHAM=NO]
	else
		[USE_GRAHAM=YES]
	fi
)

# Allow the user to disable Robinson methods

if test x$USE_ROBINSON != xYES ; then
AC_ARG_ENABLE(robinson-method,
	AC_HELP_STRING([--disable-robinson-method],
	[Disable Robinson calculation method]),
	if test "$enableval" = no; then
		[USE_ROBINSON=NO]
	else
		[USE_ROBINSON=YES]
	fi
)
fi

# Allow the user to disable Robinson-Fisher methods

AC_ARG_ENABLE(robinson-fisher,
	AC_HELP_STRING([--disable-robinson-fisher],
	[Disable Fisher's method of combining P]),
	if test "$enableval" = no; then
		[USE_FISHER=NO]
	else
		[USE_FISHER=YES]
		[USE_ROBINSON=YES]
 		AC_DEFINE(ENABLE_ROBINSON_FISHER,1,
		[Enable Fisher's method of combining P])
# trouble ???
#		AC_CHECK_LIB([dcdf], [cdfchi], LIBS="$LIBS -ldcdf",
#		    AC_MSG_ERROR([libdcdf (from package dcdflib.c) was not found.]))
	fi
)

if test x$USE_GRAHAM != xNO ; then
	AC_DEFINE(ENABLE_GRAHAM_METHOD,1,
	[Enable Graham calculation method])
fi

if test x$USE_ROBINSON != xNO ; then
	AC_DEFINE(ENABLE_ROBINSON_METHOD,1,
	[Enable Robinson calculation method])
fi

if test x$USE_FISHER != xNO ; then
	AC_DEFINE(ENABLE_ROBINSON_FISHER,1,
	[Enable Fisher's method of combining P])
	[USE_ROBINSON=YES]
fi

# Enable building with Graham/Robinson/Fisher files.

AM_CONDITIONAL(ENABLE_GRAHAM_METHOD, test x$USE_GRAHAM != xNO)
AM_CONDITIONAL(ENABLE_ROBINSON_METHOD, test x$USE_ROBINSON != xNO)
AM_CONDITIONAL(ENABLE_ROBINSON_FISHER, test x$USE_FISHER != xNO)

# Checks for header files.
AC_HEADER_STDC
AC_HEADER_STDBOOL
AC_CHECK_HEADERS([syslog.h sys/param.h fcntl.h stdlib.h string.h sys/socket.h unistd.h sys/file.h stddef.h])
AC_CHECK_HEADERS([limits.h float.h],,[AC_CHECK_HEADERS(values.h)])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_UID_T
AC_TYPE_SIGNAL

# Checks for library functions.
dnl AC_FUNC_MALLOC
# AC_FUNC_MALLOC wants rpl_malloc in malloc.c, to protect against
# malloc(0) == NULL. xmalloc handles this by retrying with size 1.

dnl AC_FUNC_STAT
# AC_FUNC_STAT wants to replace stat(2) if stat("", &st) succeeds.
# we catch this.

AC_FUNC_MEMCMP
AC_FUNC_MMAP
AC_FUNC_VPRINTF

AC_CHECK_FUNCS(alarm bzero ftruncate memset mkdir socket strdup)
AC_CHECK_FUNCS(strerror flock lockf fcntl strchr strrchr memcpy)
AC_CHECK_FUNCS(munmap pow sqrt strcasecmp strcspn strspn strstr)
AC_REPLACE_FUNCS(strlcpy strlcat)

if test "$sysconfdir" = "\${prefix}/etc" \
    && { test "$prefix" = "NONE" || test "$prefix" = "/usr" \
      || test "$prefix" = "/usr/" ; } ; then
    if test "$( (uname -s) )" = "Linux" ; then
      sysconfdir=/etc
    fi
    (
    prefix=$ac_default_prefix
    sysconfdir=`eval echo "$sysconfdir"`
    AC_MSG_NOTICE([configuration directory is "$sysconfdir".])
    AC_MSG_NOTICE([use --sysconfdir to override.])
    )
fi

AC_SUBST(DISTCHECK_CONFIGURE_FLAGS)
AC_CONFIG_FILES([Makefile tests/Makefile tests/bogoutil/Makefile bogofilter.spec
		 dcdflib/Makefile dcdflib/src/Makefile contrib/Makefile])
AC_OUTPUT
