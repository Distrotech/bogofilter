# $Id$

Name: @PACKAGE@
Version: @VERSION@
Release: 1
URL: http://bogofilter.sourceforge.net
Source0: %{name}-%{version}.tar.gz
License: GPL
Group: Applications/Internet
Summary: fast anti-spam filtering by Bayesian statistical analysis
Buildroot: %{_tmppath}/%{name}-%{version}-root
BuildRequires:	gsl >= 1.1
Conflicts: bogofilter-static
%define mydocdir %{_docdir}/%{name}

%description
Bogofilter is a Bayesian spam filter.  In its normal mode of
operation, it takes an email message or other text on standard input,
does a statistical check against lists of "good" and "bad" words, and
returns a status code indicating whether or not the message is spam.
Bogofilter is designed with fast algorithms (including Berkeley DB system),
coded directly in C, and tuned for speed, so it can be used for production
by sites that process a lot of mail.

%package static
Summary: Statically linked
Group: Applications/Internet
Conflicts: bogofilter
%description static
Statically linked bogofilter, bogolexer, and bogoutil

%prep
%setup
CFLAGS="$RPM_OPT_FLAGS" \
./configure \
  --prefix=%{_prefix} \
  --mandir=%{_mandir} \
  --sysconfdir=%{_sysconfdir} \
  --enable-static

%build
make
make DESTDIR=$RPM_BUILD_ROOT check

%clean
[ -n "$RPM_BUILD_ROOT" -a "$RPM_BUILD_ROOT" != / ] && rm -rf $RPM_BUILD_ROOT

%install
[ -n "$RPM_BUILD_ROOT" -a "$RPM_BUILD_ROOT" != / ] && rm -rf $RPM_BUILD_ROOT
make DESTDIR=$RPM_BUILD_ROOT install-strip

cp $RPM_BUILD_ROOT%{_sysconfdir}/bogofilter.cf.example \
   $RPM_BUILD_ROOT%{_sysconfdir}/bogofilter.cf

for n in xml html ; do
  install -d .inst/$n
  install -m644 doc/*.$n .inst/$n
done

for d in contrib tuning ; do
  install -d $RPM_BUILD_ROOT%{_datadir}/%{name}/$d
  files=`find $d -maxdepth 1 -type f`
  for f in $files ; do
    case $f in
      *.c|*.o|*.obj|*/Makefile*) continue ;;
      *.1)
	cp -p $f $RPM_BUILD_ROOT%{_mandir}/man1 ;;
      *)
	cp -p $f $RPM_BUILD_ROOT%{_datadir}/%{name}/$d ;;
    esac
  done
done

(
cd $RPM_BUILD_ROOT%{_datadir}/%{name}
cp -p -r contrib contrib-static
rm contrib/bogogrep_static
rm contrib-static/bogogrep
)

for README in randomtrain ; do
  ln -s ../contrib/README.$README doc/README.$README
done

%post static
for file in bogofilter bogolexer bogoutil ; do
    if [ $1 -lt 2 ] ; then
        ln -s %{_bindir}/${file}_static %{_bindir}/${file} 
    fi
done

%postun static
for file in bogofilter bogolexer bogoutil ; do
    if [ $1 -eq 0 ] ; then
        rm -f %{_bindir}/${file}
        echo rm -f %{_bindir}/${file}
    fi
done

%files
%defattr(-,root,root)

%{_bindir}/bogofilter
%{_bindir}/bogolexer
%{_bindir}/bogoutil
%{_bindir}/bogoupgrade
%{_sysconfdir}/bogofilter.cf.example
%config(noreplace) %{_sysconfdir}/bogofilter.cf

%{_mandir}/man1/bogofilter.1*
%{_mandir}/man1/bogolexer.1*
%{_mandir}/man1/bogoutil.1*
%{_mandir}/man1/bogoupgrade.1*
%{_mandir}/man1/bogol.1*
%{_mandir}/man1/bogotune.1*

%doc AUTHORS CHANGES-* COPYING INSTALL METHODS NEWS
%doc README README.* RELEASE.NOTES-* TODO UPGRADE
%doc doc/bogofilter-tuning.HOWTO
%doc doc/integrating-with-postfix
%doc doc/integrating-with-qmail
%doc doc/programmer
%doc doc/README.tdb
%doc .inst/html .inst/xml

%{_datadir}/%{name}/contrib/*
%{_datadir}/%{name}/tuning/*

%files static
%defattr(-,root,root)

%{_bindir}/bogofilter_static
%{_bindir}/bogolexer_static
%{_bindir}/bogoutil_static
%{_bindir}/bogoupgrade

%{_sysconfdir}/bogofilter.cf.example
%config(noreplace) %{_sysconfdir}/bogofilter.cf

%{_mandir}/man1/bogofilter.1*
%{_mandir}/man1/bogolexer.1*
%{_mandir}/man1/bogoutil.1*
%{_mandir}/man1/bogoupgrade.1*
%{_mandir}/man1/bogol.1*
%{_mandir}/man1/bogotune.1*

%doc AUTHORS CHANGES-* COPYING INSTALL METHODS NEWS
%doc README README.cvs RELEASE.NOTES-* TODO UPGRADE
%doc doc/bogofilter-tuning.HOWTO
%doc doc/integrating-with-postfix
%doc doc/integrating-with-qmail
%doc doc/programmer
%doc .inst/html .inst/xml

%{_datadir}/%{name}/contrib-static/*
%{_datadir}/%{name}/tuning/*

%changelog
