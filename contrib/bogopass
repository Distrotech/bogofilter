#!/usr/bin/perl

# bogopass emulates the -p (passthrough) option of bogofilter with base64
# decoding. It takes an e-mail message on stdin, filters it through unbase64,
# then sends it to bogofilter with the "-v" option. The X-Bogosity header
# output by bogofilter is added to the original message by formail, and
# the updated message is output to stdout.
#
# Any options given to bogopass will be passed on to bogofilter along with
# "-v". For instance, call "bogopass -r" to use the Robinson algorithm.
#
# This script requires formail (part of the procmail suite) to be installed.

#Copyright (C) 2002, Suzanne Skinner

use strict;

sub my_die;

my $PROG = 'bogopass';

### Begin Main ###

my $fn = "/tmp/$PROG.$$";
open F, ">$fn" or my_die "Can't open $fn for writing ($!)";
print F $_ while <STDIN>;
close F or my_die "Can't close $fn after writing ($!)";

my $options = join ' ', @ARGV;
my $bogo_header = `unbase64 $fn | bogofilter -v $options`;
chomp $bogo_header;
$bogo_header =~ /^X-Bogosity:/ or
    my_die "bogofilter returned invalid output (\"$bogo_header\")";

system("formail -I \"$bogo_header\" < $fn") == 0 or
    my_die "formail failed ($?)";
unlink $fn;
exit 0;

### End Main ###

sub my_die {
    my $msg = shift;
    die "$PROG: $msg\n";
}

